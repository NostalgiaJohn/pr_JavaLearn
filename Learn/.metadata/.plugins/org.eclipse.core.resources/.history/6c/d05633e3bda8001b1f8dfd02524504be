package com.fs.a_array;


public class Demo2 {
	public static void main(String[] args) {
		
	}
	
	/*
	存在一个数组，数组中的元素为
		int[] array = {1, 3, 5, 7, 9, 11, 13, 15, 17, 0};
		要求
			1. 0是无效元素，仅占位使用
			2. 当前数组中【有效元素】个数为9
		需求
			在该数组中的指定下标位置放入指定元素
	思考：
		在数组下标为n的位置插入元素，从下标n之后的元素整体向右移动
		后置赋值，防止有效数据被覆盖
	【重点】
		1. 空数据，无效数据思想
		2. 数据的移动过程，粗加工，细打磨过程
		3. 时间消耗问题
		
	方法分析:
		pubilc static
		返回值类型：
			void 可用，但不推荐
			boolean 可以 表示插入成功与否
			int 可以 但返回值含义的约束较麻烦
		方法名:
			add
		形式参数列表：
			1. 需要插入数据的数组
			2. 指定插入数据的下标位置
			3. 指定插入的数据
			(int[] arr, int index, int insert)
	方法声明：
		public static boolean ass(int[] arr, int index, int insert)
	*/
	/**
	 * 
	 * @param arr
	 * @param index
	 * @param insert
	 * @return
	 */
	public static boolean ass(int[] arr, int index, int insert) {
		
	}
}










